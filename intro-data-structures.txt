1. A line of people at an amusement park ride.

-The line is composed of members, represented as strings.
-There is a front to the line, as well as a back.
-When someone enters the line, place them at the end.
-People may leave the line whenever they see fit, and those behind them take their place.

Given the above real-world information, use an array data structure to code the following solution.

// a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
var riders = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

// b) Insert a new person, "Mary" at the end of the line. In other words,
// you should insert Mary after Mike.
function insertRiderEnd(newRider){
	return (riders.push(newRider));
}
var newRider = "Mary";

// c) Find a person in line named "Josh." This function should return the
// position of 2 in the array, (recall that arrays are 0-based).
function findRider(riders){
	const found = riders.findIndex(riders => riders === "Josh");
	return found;
}
console.log(findRider(riders));

// d) Find a person in line named "Emily." What should your function return 
// if it does not find the item in the array?
function findUnknownRider(riders){
	const found = riders.findIndex(riders => riders === "Mary");
	if (found === (-1)){
		alert ("rider cannot be found in line");
	} else {
		return found;
	}
}
console.log(findUnknownRider(riders));

// e) What if Ava wants to allow a friend, "Melissa", to cut in line in front
// of her? How would you code this so Melissa appears before Ava?
function insertRiderCut(riders){
	const cut = riders.splice(1, 0, "Melissa");
	return cut;
}
console.log(insertRiderCut(riders));

// f) If Patrick wants to leave the line, how would you delete him from the array?
function removeRider(riders){
	const removed = riders.splice(3, 1);
	return removed;
}
console.log(removeRider(riders));


2. Provide another real-world example that you can model using a data structure.

Answer: Fast food orders. People order, can change their minds and cancel, want to add items to order once at window, sometimes skip through window to prank following customers to throw off orders.

3. How would your data structure allow developers to access and manipulate the data?

Answer: My data structure would be in the form of an array since there's never the occassion for a tied '2nd place' as given as an example in the material for this checkpoint. This array data structure would allow developers to access and manipulate the data accordingly.






